{"version":3,"sources":["main.js","TocMenu.js"],"names":[],"mappingsfile":"frontend.js","sourcesContent":["\n$(function() {\n    var $wrap = $('.articleBarWrap');\n    var $bar = $wrap.find('.articleBar');\n    var $content = $('.articleContent');\n    \n    var blockWidth = 256;\n    var blockHeight = 216;\n    var museum;\n    var settings = {\n        language: 'en',\n    };\n    var menu = new TocMenu();\n    menu.show();\n    \n    init();\n    \n    function init() {\n        $.ajax({\n            url: \"js/data.json\",\n            success: function (data) {\n                museum = data;\n                \n                // Test: duplicate articles\n                for (var i = 0; i < 4; i++) {\n                    data.articles.forEach(function(article) {\n                        data.articles.push(article);\n                    });\n                }\n                \n                $bar.width(Math.ceil(data.articles.length/2) * blockWidth);\n                console.log($bar.get(0));\n                \n                // Render article bar\n                var tpl = twig({ data: $('#articleBar-tpl').html() });\n                $bar.html(tpl.render(data));\n                \n                // Link model data\n                $bar.find('.article').each(function(index) {\n                    $(this).data('article', museum.articles[index]);\n                });\n                \n                $bar.on('click', '.article', function() {\n                    render($(this).data('article'));\n                });\n                \n                render(museum.articles[0]);\n            },\n            error: function(a,b,c) {\n                console.log('Error getting data', a,b,c);\n                $bar.html('Er is iets mis gegaan bij het downloaden van de lijst met artikelen, we proberen het over 5 seconden opnieuw...');\n                setTimeout(document.location.reload, 5000);\n            }\n        });\n\n        // Set viewport meta tag\n        $(window).on('resize', setMetaTag);\n        setMetaTag();\n        function setMetaTag() {\n            $('meta#viewport').attr('content', 'width=' + $(window).width() + ', initial-scale=1');\n        }\n    }\n    \n    function render(article) {\n        loadArticle(article, function(html) {\n            $article = $(html);\n            $content.empty().append($article);\n            cleanArticle($content);\n            menu.extractToc(article, $content);\n        });\n    }\n    \n    function cleanArticle($article) {\n        /* Set extra classes based on inline style */\n        $article.find('.infobox th[style~=\"background-color:\"]').addClass('header');\n        $article.find('.infobox td[style~=\"font-size:\"]').addClass('subscript');\n    }\n    \n    function loadArticle(article, callback) {\n        var url = 'http://' + article.language + '.wikipedia.org' +\n            '/w/api.php?action=query&prop=revisions&format=json&rvprop=content&rvparse=&titles=' + article.title;\n        \n        var result = null;\n        $.ajax({\n            url: 'https://' + article.language + '.wikipedia.org/w/api.php',\n            dataType: 'jsonp',\n            cache: true,\n            data: {\n                action: 'query',\n                prop: 'revisions',\n                format: 'json',\n                rvprop: 'content',\n                rvparse: 'rvparse',\n                'continue': '',\n                titles: article.title,\n            },\n            success: function(data) {\n                $.each(data.query.pages, function(pageId, page) {\n                    console.log(page);\n                    result = page.revisions[0]['*'];\n                });\n                callback(result);\n            },\n            error: function(a,b,c) {\n                console.log('error retrieving article', a,b,c);\n                callback(null);\n            }\n        });\n        \n    }\n});\n","function TocMenu() {\r\n    \r\n    var $content = $('.articleContent');\r\n    var $menu = $('.tocMenu');\r\n    var $topBar = $('.topBar');\r\n    var $window = $(window);\r\n    var windowHeight = $window.height();\r\n    var items = [];\r\n    var data;\r\n    var curIndex = -1;\r\n    \r\n    init();\r\n    \r\n    function init() {\r\n        $menu.on('click', 'a', function(e) {\r\n            e.preventDefault();\r\n            var pos = $content.find($(this).attr('href')).position();\r\n            $(\"html\").velocity(\"scroll\", { offset: (pos.top - $topBar.height()) + 'px', mobileHA: false });\r\n            hide();\r\n        });\r\n        \r\n        $window.on('resize', function() {\r\n            windowHeight = $window.height();\r\n        });\r\n        \r\n        $window.on('scroll', onScroll);\r\n    }\r\n    \r\n    function onScroll() {\r\n        var center = window.scrollY + windowHeight/2;\r\n        // Find closest header above center\r\n        var i = items.length - 1\r\n        for (; i >= 0; i--) {\r\n            if (items[i].pos.top < center) { break; }\r\n        }\r\n        console.log(i);\r\n        if (i != curIndex) {\r\n            $menu.find('.active').removeClass('active');\r\n            items[i].elem.addClass('active');\r\n            curIndex = i;\r\n        }\r\n    }\r\n    \r\n    function extractToc(articleData, $article) {\r\n        data = articleData;\r\n        $menu.empty();\r\n        items = [];\r\n        \r\n        var toc = $article.find('#toc');\r\n        if (!toc.length) { return; }\r\n        toc.detach().appendTo($menu);\r\n        \r\n        $('<h2 class=\"articleTitle\" />').text(data.humanTitle).insertAfter($menu.find('#toctitle'));\r\n        \r\n        $menu.css('background-image', 'linear-gradient(rgba(0, 0, 0, 0.5) 0%, rgb(0, 0, 0) 40%), url(' + articleData.image + ')');\r\n        \r\n        toc.find('ul li a').each(function(i) {\r\n            var a = $(this);\r\n            items.push({\r\n                text: a.text(),\r\n                position: {left: 0, top: 0},\r\n                elem: a,\r\n                href: a.attr('href'),\r\n            });\r\n        });\r\n        \r\n        findHeaderPositions();\r\n        $content.waitForImages(findHeaderPositions);\r\n    }\r\n    \r\n    function findHeaderPositions() {\r\n        items.forEach(function(item) {\r\n            item.pos = $content.find(item.href).position();\r\n        });\r\n    }\r\n    \r\n    function show() {\r\n        $menu.velocity({translateX: $menu.outerWidth(), translateZ: 0});\r\n    }\r\n    \r\n    function hide() {\r\n        $menu.velocity({translateX: 0, translateZ: 0});\r\n    }\r\n    \r\n    return {\r\n        extractToc: extractToc,\r\n        findHeaderPositions: findHeaderPositions,\r\n        show: show,\r\n        hide: hide,\r\n    };\r\n}"],"sourceRoot":"/source/"}